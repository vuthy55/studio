rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isOwner() {
      return request.auth.uid == resource.data.uid;
    }
    
    function isOwner(uid) {
      return request.auth.uid == uid;
    }

    function isAdmin() {
      // Check if the user is an admin
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /users/{userId} {
      allow read, update, delete: if isOwner(userId) || isAdmin();
      allow create: if request.auth != null;

      match /transactionLogs/{logId} {
        // Admins can read anyone's logs, users can only manage their own.
        allow read: if isOwner(userId) || isAdmin();
        allow create: if isOwner(userId);
        allow update, delete: if false; // Logs should be immutable
      }

      match /practiceHistory/{historyId} {
        // Only the owner can manage their practice history.
        allow read, write: if isOwner(userId);
      }
    }
    
    match /settings/appConfig {
        // Admins can read and update app settings.
        // Authenticated users can read settings.
        allow read: if request.auth != null;
        allow write: if isAdmin();
    }

    match /syncRooms/{roomId} {
      allow read: if request.auth.token.email in resource.data.invitedEmails;
      allow create: if request.auth.uid == request.resource.data.creatorUid;
      allow update: if request.auth.uid == resource.data.creatorUid || request.auth.uid in resource.data.emceeUids;
      allow delete: if request.auth.uid == resource.data.creatorUid;

      match /participants/{participantId} {
        allow read: if request.auth.token.email in get(/databases/$(database)/documents/syncRooms/$(roomId)).data.invitedEmails;
        allow create, update: if request.auth.uid == participantId;
        allow delete: if request.auth.uid == participantId;
      }

      match /messages/{messageId} {
        allow read: if request.auth.token.email in get(/databases/$(database)/documents/syncRooms/$(roomId)).data.invitedEmails;
        allow create: if request.auth.uid == request.resource.data.speakerUid;
        allow update, delete: if false; // Messages are immutable
      }
    }
  }
}
